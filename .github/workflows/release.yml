name: Release

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  linux:
    runs-on: ${{ matrix.platform.runner }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - runner: ubuntu-latest
            target: x86_64
            before: 'yum install --assumeyes perl-core'
          - runner: ubuntu-latest
            target: x64
            before: 'yum install --assumeyes perl-core'
          - runner: ubuntu-latest
            target: aarch64
            before: 'apt update && apt install -y libssl-dev'
          - runner: ubuntu-latest
            target: armv7
            before: 'apt update && apt install -y libssl-dev'
          - runner: ubuntu-latest
            target: s390x
            before: 'apt update && apt install -y libssl-dev'
          - runner: ubuntu-latest
            target: powerpc64le
            before: 'apt update && apt install -y libssl-dev'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: 3.*
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.platform.target }}
          args: --release --out dist --find-interpreter
          sccache: 'true'
          manylinux: 'auto'
          before-script-linux: ${{ matrix.platform.before }}
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.platform.target }}
          path: dist

#  musllinux:
#    runs-on: ${{ matrix.platform.runner }}
#    strategy:
#      fail-fast: true
#      matrix:
#        platform:
#          - runner: ubuntu-latest
#            target: x86_64
#          - runner: ubuntu-latest
#            target: x86
#          - runner: ubuntu-latest
#            target: aarch64
#          - runner: ubuntu-latest
#            target: armv7
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: |
#            3.9
#            3.10
#            3.11
#            3.12
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#          manylinux: musllinux_1_2
#          before-script-linux: sudo apt-get install --reinstall pkg-config libssl-dev
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-musllinux-${{ matrix.platform.target }}
#          path: dist
#
#  windows:
#    runs-on: ${{ matrix.platform.runner }}
#    strategy:
#      fail-fast: true
#      matrix:
#        platform:
#          - runner: windows-latest
#            target: x64
#          - runner: windows-latest
#            target: x86
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: |
#            3.9
#            3.10
#            3.11
#            3.12
#          architecture: ${{ matrix.platform.target }}
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-windows-${{ matrix.platform.target }}
#          path: dist
#
#  macos:
#    runs-on: ${{ matrix.platform.runner }}
#    strategy:
#      fail-fast: true
#      matrix:
#        platform:
#          - runner: macos-12
#            target: x86_64
#          - runner: macos-latest
#            target: aarch64
#    steps:
#      - uses: actions/checkout@v4
#      - uses: actions/setup-python@v5
#        with:
#          python-version: |
#            3.9
#            3.10
#            3.11
#            3.12
#      - name: Build wheels
#        uses: PyO3/maturin-action@v1
#        with:
#          target: ${{ matrix.platform.target }}
#          args: --release --out dist --find-interpreter
#          sccache: 'true'
#      - name: Upload wheels
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-macos-${{ matrix.platform.target }}
#          path: dist
#
#  sdist:
#    runs-on: ubuntu-latest
#    steps:
#      - uses: actions/checkout@v4
#      - name: Build sdist
#        uses: PyO3/maturin-action@v1
#        with:
#          command: sdist
#          args: --out dist
#      - name: Upload sdist
#        uses: actions/upload-artifact@v4
#        with:
#          name: wheels-sdist
#          path: dist

#  release:
#    name: Release
#    runs-on: ubuntu-latest
#    if: ${{ github.ref == format('refs/heads/{0}', github.event.repository.default_branch) }}
#    needs: [linux, musllinux, windows, macos, sdist]
#    permissions:
#      # Use to sign the release artifacts
#      id-token: write
#      # Used to upload release artifacts
#      contents: write
#      # Used to generate artifact attestation
#      attestations: write
#    steps:
#      - uses: actions/download-artifact@v4
#      - name: Generate artifact attestation
#        uses: actions/attest-build-provenance@v1
#        with:
#          subject-path: 'wheels-*/*'
#
#      - name: Get project version
#        id: 'pyproject_version'
#        run: echo "version=v$(grep -m 1 version pyproject.toml | tr -s ' ' | tr -d '"' | tr -d "'" | cut -d' ' -f3)" >> $GITHUB_OUTPUT
#
#      - name: Publish to PyPI
#        uses: PyO3/maturin-action@v1
#        env:
#          MATURIN_PYPI_TOKEN: ${{ secrets.POETRY_PYPI_TOKEN_PYPI }}
#        with:
#          command: upload
#          args: --non-interactive wheels-*/*
#
#      - name: Build changelog
#        id: build_changelog
#        uses: mikepenz/release-changelog-builder-action@v5
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          toTag: ${{ github.sha }}
#          ignorePreReleases: 'true'
#          configurationJson: |
#            {
#              "template": "## Release ${{ steps.pyproject_version.outputs.version }}\n\n#{{CHANGELOG}}",
#              "categories": [
#                {
#                    "title": "### Changes",
#                    "labels": []
#                }
#              ]
#            }
#
#      - name: Create release
#        uses: softprops/action-gh-release@v2
#        with:
#          body: ${{ steps.build_changelog.outputs.changelog }}
#          tag_name: ${{ steps.pyproject_version.outputs.version }}
